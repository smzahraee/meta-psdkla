From 979d551a9307b1b8b6032b894327679a92faf293 Mon Sep 17 00:00:00 2001
From: Subhajit Paul <a0132170@ti.com>
Date: Thu, 1 Apr 2021 00:21:09 +0530
Subject: [PATCH] use system pybind11

Signed-off-by: Subhajit Paul <a0132170@ti.com>
---
 cmake/external/Findpybind11.cmake | 56 +++++++++++++++++++++++++++++++
 cmake/onnxruntime_python.cmake    |  2 +-
 2 files changed, 57 insertions(+), 1 deletion(-)
 create mode 100644 cmake/external/Findpybind11.cmake

diff --git a/cmake/external/Findpybind11.cmake b/cmake/external/Findpybind11.cmake
new file mode 100644
index 0000000000..af50b289dc
--- /dev/null
+++ b/cmake/external/Findpybind11.cmake
@@ -0,0 +1,56 @@
+# - Find the NumPy libraries
+# This module finds if NumPy is installed, and sets the following variables
+# indicating where it is.
+#
+# TODO: Update to provide the libraries and paths for linking npymath lib.
+#
+#  NUMPY_FOUND               - was NumPy found
+#  NUMPY_VERSION             - the version of NumPy found as a string
+#  NUMPY_VERSION_MAJOR       - the major version number of NumPy
+#  NUMPY_VERSION_MINOR       - the minor version number of NumPy
+#  NUMPY_VERSION_PATCH       - the patch version number of NumPy
+#  NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601
+#  NUMPY_INCLUDE_DIR         - path to the NumPy include files
+
+unset(PYBIND11_VERSION)
+unset(pybind11_INCLUDE_DIRS)
+
+if(PYTHONINTERP_FOUND)
+  execute_process(COMMAND "${PYTHON_EXECUTABLE}" "-c"
+    "import pybind11 as n; print(n.__version__); print(n.get_include());"
+    RESULT_VARIABLE __result
+    OUTPUT_VARIABLE __output
+    OUTPUT_STRIP_TRAILING_WHITESPACE)
+
+  if(__result MATCHES 0)
+    string(REGEX REPLACE ";" "\\\\;" __values ${__output})
+    string(REGEX REPLACE "\r?\n" ";"    __values ${__values})
+    list(GET __values 0 PYBIND11_VERSION)
+    list(GET __values 1 pybind11_INCLUDE_DIRS)
+
+    string(REGEX MATCH "^([0-9])+\\.([0-9])+\\.([0-9])+" __ver_check "${PYBIND11_VERSION}")
+    if(NOT "${__ver_check}" STREQUAL "")
+      set(PYBIND11_VERSION_MAJOR ${CMAKE_MATCH_1})
+      set(PYBIND11_VERSION_MINOR ${CMAKE_MATCH_2})
+      set(PYBIND11_VERSION_PATCH ${CMAKE_MATCH_3})
+      math(EXPR PYBIND11_VERSION_DECIMAL
+        "(${PYBIND11_VERSION_MAJOR} * 10000) + (${PYBIND11_VERSION_MINOR} * 100) + ${PYBIND11_VERSION_PATCH}")
+      string(REGEX REPLACE "\\\\" "/"  pybind11_INCLUDE_DIRS ${pybind11_INCLUDE_DIRS})
+    else()
+     unset(PYBIND11_VERSION)
+     unset(pybind11_INCLUDE_DIRS)
+     message(STATUS "Requested PyBind11 version and include path, but got instead:\n${__output}\n")
+    endif()
+  endif()
+else()
+  message(STATUS "To find PyBind11 Python interpretator is required to be found.")
+endif()
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(pybind11 REQUIRED_VARS pybind11_INCLUDE_DIRS PYBIND11_VERSION
+                                        VERSION_VAR   PYBIND11_VERSION)
+
+if(PYBIND11_FOUND)
+  message(STATUS "PyBind11 ver. ${PYBIND11_VERSION} found (include: ${pybind11_INCLUDE_DIRS})")
+endif()
+
diff --git a/cmake/onnxruntime_python.cmake b/cmake/onnxruntime_python.cmake
index 7cb6fb69fa..9de35c69c4 100644
--- a/cmake/onnxruntime_python.cmake
+++ b/cmake/onnxruntime_python.cmake
@@ -1,7 +1,7 @@
 # Copyright (c) Microsoft Corporation. All rights reserved.
 # Licensed under the MIT License.
 
-include(pybind11)
+FIND_PACKAGE(pybind11)
 FIND_PACKAGE(NumPy)
 
 if(NOT PYTHON_INCLUDE_DIR)
-- 
2.17.1

