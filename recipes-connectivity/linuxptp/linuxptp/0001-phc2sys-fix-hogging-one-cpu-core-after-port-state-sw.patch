From aad80c10fd6ac0918890b9d7d9251a2835ff6f9e Mon Sep 17 00:00:00 2001
From: Grygorii Strashko <grygorii.strashko@ti.com>
Date: Tue, 14 Sep 2021 12:13:34 +0300
Subject: [PATCH] phc2sys: fix hogging one cpu core after port state switch

In terms of phc2sys, when portX state changed from time consumer (pps off,
extts on) to time producer (pps on, extts off) it's possible that, while
switching, there could be extts event generated, but not processed. As
result, poll() will exit with no delay in do_autocfg_extts_loop(), which
does not process extts events from time producer portX, and so cause cpu
hogging.

Fix it by clearing exts fifo after extts disabled.

Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
---
 phc2sys.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/phc2sys.c b/phc2sys.c
index ba2a390..ad8fc27 100644
--- a/phc2sys.c
+++ b/phc2sys.c
@@ -952,6 +952,10 @@ static int extts_input_control(struct clock *clock, int extts_idx, int enable)
 			return -1;
 	}
 
+	if (!enable)
+		extts_slave_clear_fifo(clock);
+
+
 	return 0;
 }
 
-- 
2.17.1

