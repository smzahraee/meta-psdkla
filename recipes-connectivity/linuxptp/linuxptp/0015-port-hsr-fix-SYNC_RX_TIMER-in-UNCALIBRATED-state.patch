From 8b45431cb3dbc2df22de9a37c30d487fe838978c Mon Sep 17 00:00:00 2001
From: Grygorii Strashko <grygorii.strashko@ti.com>
Date: Fri, 16 Apr 2021 18:04:34 +0300
Subject: [PATCH 15/15] port: hsr: fix SYNC_RX_TIMER in UNCALIBRATED state

When SYNC_RX_TIMER trigger in UNCALIBRATED state and there is still foreign
master exist (on other port) the ptp4l will not clear SYNC_RX_TIMER and may
enter a loop with no delay and produce storm of below log messages until
new event arrived:

ptp4l[4317.242]: port 3: rx sync timeout, 4
ptp4l[4317.243]: selected best master clock 000023.fffe.3b8336 on port 2
ptp4l[4317.244]: selected best master clock 000023.fffe.3b8336

Ensure SYNC_RX_TIMER is processed properly and timer cleared the same way
as ANNOUNCE_TIMER event.

Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
---
 port.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/port.c b/port.c
index 25f5872..14680bd 100644
--- a/port.c
+++ b/port.c
@@ -2187,7 +2187,7 @@ static int red_sync_residence_time(struct port *p, struct ptp_message *sync,
 	    sync->red_hwts.ts.ns < sync->hwts.ts.ns) {
 		pr_err("%s: SYNC cut-thru ts ERROR: ct=%llu, rx=%llu",
 		       p->name,
-		       sync->red_hwts.ts.ns, sync->red_hwts.ts.ns);
+		       sync->red_hwts.ts.ns, sync->hwts.ts.ns);
 		return -1;
 	}
 
@@ -3139,17 +3139,13 @@ static enum fsm_event bc_event(struct port *p, int fd_index)
 
 	switch (fd_index) {
 	case FD_SYNC_RX_TIMER:
-		if (red_hsr_port(p)) {
+	case FD_ANNOUNCE_TIMER:
+		if (red_hsr_port(p) && (fd_index == FD_SYNC_RX_TIMER)) {
 			p->red_rx_sync_missed++;
-			if (p->best)
-				fc_clear(p->best);
-			pr_err("port %hu: rx sync timeout, %d",
-				portnum(p), p->red_rx_sync_missed);
-			return EV_SYNC_RECEIPT_TIMEOUT_EXPIRES;
+			port_clr_tmo(p->fda.fd[FD_SYNC_RX_TIMER]);
 		}
-	case FD_ANNOUNCE_TIMER:
-		pr_err("port %hu: %s timeout", portnum(p),
-			 fd_index == FD_SYNC_RX_TIMER ? "rx sync" : "announce");
+		pr_err("port %hu: %s timeout %d", portnum(p),
+			 fd_index == FD_SYNC_RX_TIMER ? "rx sync" : "announce", p->red_rx_sync_missed);
 		if (p->best) {
 			fc_clear(p->best);
 		}
@@ -3178,7 +3174,11 @@ static enum fsm_event bc_event(struct port *p, int fd_index)
 		if (p->inhibit_announce) {
 			return EV_NONE;
 		}
-		return EV_ANNOUNCE_RECEIPT_TIMEOUT_EXPIRES;
+
+		if (red_hsr_port(p) && (fd_index == FD_SYNC_RX_TIMER))
+			return EV_SYNC_RECEIPT_TIMEOUT_EXPIRES;
+		else
+			return EV_ANNOUNCE_RECEIPT_TIMEOUT_EXPIRES;
 
 	case FD_DELAY_TIMER:
 		pr_debug("port %hu: delay timeout", portnum(p));
-- 
2.17.1

