From 105181aa651baa3618b6d45595b7ec9b2318d248 Mon Sep 17 00:00:00 2001
From: Grygorii Strashko <grygorii.strashko@ti.com>
Date: Fri, 18 Dec 2020 11:51:21 +0200
Subject: [PATCH 08/35] net: ethernet: ti: cpts: protect critical clock get
 time part on rt

On RT spin_lock become rt-mutexes and critical fast part of PHC get time
can be interrupted.

Ensure critical fast part of PHC get time will not be interrupted on RT by
using local_irq_save/restore.

Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
---
 drivers/net/ethernet/ti/cpts.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/ti/cpts.c b/drivers/net/ethernet/ti/cpts.c
index 8dcd9ff4b684..5c6a646f23f3 100644
--- a/drivers/net/ethernet/ti/cpts.c
+++ b/drivers/net/ethernet/ti/cpts.c
@@ -196,12 +196,12 @@ static void cpts_update_cur_time(struct cpts *cpts, int match,
 	reinit_completion(&cpts->ts_push_complete);
 
 	/* use spin_lock_irqsave() here as it has to run very fast */
-	spin_lock_irqsave(&cpts->lock, flags);
+	local_irq_save(flags);
 	ptp_read_system_prets(sts);
 	cpts_write32(cpts, TS_PUSH, ts_push);
 	cpts_read32(cpts, ts_push);
 	ptp_read_system_postts(sts);
-	spin_unlock_irqrestore(&cpts->lock, flags);
+	local_irq_restore(flags);
 
 	if (cpts->irq_poll && cpts_fifo_read(cpts, match) && match != -1)
 		dev_err(cpts->dev, "cpts: unable to obtain a time stamp\n");
-- 
2.17.1

