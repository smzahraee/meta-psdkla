From 46842f6ba77046226d26b6e39e7dba913cc60e25 Mon Sep 17 00:00:00 2001
From: Grygorii Strashko <grygorii.strashko@ti.com>
Date: Mon, 19 Apr 2021 13:19:14 +0300
Subject: [PATCH 35/35] net: ethernet: ti: prueth: fix rx timestamp reading
 when packet wrapped buf boundary

The is one case when RX TS is not read properly:
 P - packet data
 T - timestamp
 ....PPPT - fail
 T....PPP - ok
 PT....pp - ok

In the above failed case, the packet will be detected as wrapped packet
while in fact it fully fits at the end of the queue buffer. The packet data
will be red properly and remaining=0, which will cause src pointer switch
to the beginning of the queue buffer and, so, random data will be red as
TS.

The similar will happen with packet without TS, but without packet data
corruption - just additional run-time overhead.
 ....PPPP

To fix such cases do not treat packets as wrapped packets if they fully
fits at the end of the queue buffer.

Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
---
 drivers/net/ethernet/ti/prueth_core.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/ti/prueth_core.c b/drivers/net/ethernet/ti/prueth_core.c
index 5d3fcbd94623..d0cf9ef91a21 100644
--- a/drivers/net/ethernet/ti/prueth_core.c
+++ b/drivers/net/ethernet/ti/prueth_core.c
@@ -1193,7 +1193,8 @@ int emac_rx_packet(struct prueth_emac *emac, u16 *bd_rd_ptr,
 	/* Check for wrap around */
 	if (update_block >= buffer_desc_count) {
 		update_block %= buffer_desc_count;
-		buffer_wrapped = true;
+		if (update_block)
+			buffer_wrapped = true;
 	}
 
 	/* calculate new pointer in ram */
-- 
2.17.1

