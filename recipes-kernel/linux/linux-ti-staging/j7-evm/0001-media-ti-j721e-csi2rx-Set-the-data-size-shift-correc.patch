From d179b0af6bbd56747a5c018a9dbe0975cfdfdbba Mon Sep 17 00:00:00 2001
From: Pratyush Yadav <p.yadav@ti.com>
Date: Fri, 19 Nov 2021 23:01:01 +0530
Subject: [tiL5.10-CON PATCH 1/3] media: ti: j721e-csi2rx: Set the data size
 shift correctly

The SIZE_CFG field in SHIM_DMACNTX field needs to be set correctly for
the image to be unpacked correctly. Currently, the field is set to the
default value of 0 which works fine for YUV422-8 and RAW6-8. But for other
formats like RAW10-16 or YUV422-10 it results in the second byte of the
pixel being dropped.

Introduce a new member to ti_csi2rx_fmt that stores the size and set it
when configuring the DMA context to make sure data is unpacked
correctly.

Signed-off-by: Pratyush Yadav <p.yadav@ti.com>
---
 drivers/media/platform/ti/j721e-csi2rx/j721e-csi2rx.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/media/platform/ti/j721e-csi2rx/j721e-csi2rx.c b/drivers/media/platform/ti/j721e-csi2rx/j721e-csi2rx.c
index 7931285e345e..9e92be7fbaf1 100644
--- a/drivers/media/platform/ti/j721e-csi2rx/j721e-csi2rx.c
+++ b/drivers/media/platform/ti/j721e-csi2rx/j721e-csi2rx.c
@@ -25,12 +25,16 @@
 #define SHIM_DMACNTX(i)			(0x20 + ((i) * 0x20))
 #define SHIM_DMACNTX_EN			BIT(31)
 #define SHIM_DMACNTX_YUV422		GENMASK(27, 26)
+#define SHIM_DMACNTX_SIZE		GENMASK(21, 20)
 #define SHIM_DMACNTX_VC			GENMASK(9, 6)
 #define SHIM_DMACNTX_FMT		GENMASK(5, 0)
 #define SHIM_DMACNTX_UYVY		0
 #define SHIM_DMACNTX_VYUY		1
 #define SHIM_DMACNTX_YUYV		2
 #define SHIM_DMACNTX_YVYU		3
+#define SHIM_DMACNTX_SIZE_8		0
+#define SHIM_DMACNTX_SIZE_16		1
+#define SHIM_DMACNTX_SIZE_32		2
 
 #define SHIM_PSI_CFG0(i)		(0x24 + ((i) * 0x20))
 #define SHIM_PSI_CFG0_SRC_TAG		GENMASK(15, 0)
@@ -66,6 +70,7 @@ struct ti_csi2rx_fmt {
 	enum v4l2_colorspace		colorspace;
 	u32				csi_df;	/* CSI Data format. */
 	u8				bpp;	/* Bits per pixel. */
+	u8				size;	/* Data size shift when unpacking. */
 };
 
 struct ti_csi2rx_buffer {
@@ -136,24 +141,28 @@ static const struct ti_csi2rx_fmt formats[] = {
 		.colorspace		= V4L2_COLORSPACE_SRGB,
 		.csi_df			= CSI_DF_YUV422,
 		.bpp			= 16,
+		.size			= SHIM_DMACNTX_SIZE_8,
 	}, {
 		.fourcc			= V4L2_PIX_FMT_UYVY,
 		.code			= MEDIA_BUS_FMT_UYVY8_2X8,
 		.colorspace		= V4L2_COLORSPACE_SRGB,
 		.csi_df			= CSI_DF_YUV422,
 		.bpp			= 16,
+		.size			= SHIM_DMACNTX_SIZE_8,
 	}, {
 		.fourcc			= V4L2_PIX_FMT_YVYU,
 		.code			= MEDIA_BUS_FMT_YVYU8_2X8,
 		.colorspace		= V4L2_COLORSPACE_SRGB,
 		.csi_df			= CSI_DF_YUV422,
 		.bpp			= 16,
+		.size			= SHIM_DMACNTX_SIZE_8,
 	}, {
 		.fourcc			= V4L2_PIX_FMT_VYUY,
 		.code			= MEDIA_BUS_FMT_VYUY8_2X8,
 		.colorspace		= V4L2_COLORSPACE_SRGB,
 		.csi_df			= CSI_DF_YUV422,
 		.bpp			= 16,
+		.size			= SHIM_DMACNTX_SIZE_8,
 	},
 
 	/* More formats can be supported but they are not listed for now. */
@@ -482,6 +491,7 @@ static void ti_csi2rx_setup_shim(struct ti_csi2rx_ctx *ctx)
 	}
 
 	reg |= FIELD_PREP(SHIM_DMACNTX_VC, ctx->vc);
+	reg |= FIELD_PREP(SHIM_DMACNTX_SIZE, fmt->size);
 
 	writel(reg, csi->shim + SHIM_DMACNTX(ctx->idx));
 
-- 
2.34.1

