# Kernel DTB build targets
linux-dtbs-jacinto: linux-dtbs
linux-dtbs-jacinto_clean: linux-dtbs_clean
linux-dtbs-jacinto_install: linux-dtbs_install

linux-dtbs:
	@echo =====================================
	@echo     Building the Linux Kernel DTBs
	@echo =====================================
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=__KERNEL_ARCH__ CROSS_COMPILE=$(CROSS_COMPILE) $(DEFCONFIG)
	@for DTB in __KERNEL_DEVICETREE__; do \
		$(MAKE) -j $(MAKE_JOBS) -C $(LINUXKERNEL_INSTALL_DIR) DTC_FLAGS=-@ ARCH=__KERNEL_ARCH__ CROSS_COMPILE=$(CROSS_COMPILE) $$DTB; \
	done

linux-dtbs_stage:
	mkdir -p $(TI_SDK_PATH)/board-support/built-images
ifeq ($(findstring hs,$(PLATFORM)),hs)
	@for DTB in __KERNEL_DEVICETREE__; do \
		$(TI_SECURE_DEV_PKG)/scripts/secure-binary-image.sh $(LINUXKERNEL_INSTALL_DIR)/arch/__KERNEL_ARCH__/boot/dts/$$DTB $(TI_SDK_PATH)/board-support/built-images/$$(basename $$DTB).sec; \
	done
else
	@for DTB in __KERNEL_DEVICETREE__; do \
		cp $(LINUXKERNEL_INSTALL_DIR)/arch/__KERNEL_ARCH__/boot/dts/$$DTB $(TI_SDK_PATH)/board-support/built-images; \
	done
endif

linux-dtbs_install: linux-dtbs_stage
ifeq ($(findstring hs,$(PLATFORM)),)
	@echo =======================================
	@echo     Installing the Linux Kernel DTBs
	@echo =======================================
	@if [ ! -d $(DESTDIR) ] ; then \
		echo "The extracted target filesystem directory doesn't exist."; \
		echo "Please run setup.sh in the SDK's root directory and then try again."; \
		exit 1; \
	fi
	install -d $(DESTDIR)/boot
	@for DTB in __KERNEL_DEVICETREE__; do \
		install -m 0644 $(TI_SDK_PATH)/board-support/built-images/$$(basename $$DTB) $(DESTDIR)/boot/; \
	done
endif

linux-dtbs_clean:
	@echo =======================================
	@echo     Cleaning the Linux Kernel DTBs
	@echo =======================================
	@echo "Nothing to do"

