
u-boot-spl-jacinto: u-boot
u-boot-spl-jacinto_clean: u-boot_clean
u-boot-spl-jacinto_install: u-boot_install

ifeq ($(findstring hs,$(PLATFORM)),hs)
UBOOT_BIN_SUFFIX=.signed
UBOOT_IMAGE_SUFFIX=_HS
UBOOT_BUILD_DIR=u-boot_hs_build
else
UBOOT_BIN_SUFFIX=
UBOOT_IMAGE_SUFFIX=
UBOOT_BUILD_DIR=u-boot_build
endif

UBOOT_ATF=$(TI_SDK_PATH)/board-support/prebuilt-images/bl31.bin$(UBOOT_BIN_SUFFIX)
UBOOT_TEE=$(TI_SDK_PATH)/board-support/prebuilt-images/bl32.bin$(UBOOT_BIN_SUFFIX)
UBOOT_DM=$(TI_SDK_PATH)/board-support/prebuilt-images/ipc_echo_testb_mcu1_0_release_strip.xer5f$(UBOOT_BIN_SUFFIX)

UBOOT_A72_BUILD_DIR=$(TI_SDK_PATH)/board-support/$(UBOOT_BUILD_DIR)/a72
UBOOT_R5_BUILD_DIR=$(TI_SDK_PATH)/board-support/$(UBOOT_BUILD_DIR)/r5

u-boot: u-boot-a72 u-boot-r5
ifeq ($(findstring hs,$(PLATFORM)),hs)
	@echo "===================== WARNING ======================"
	@echo "If using dorprocboot=1 in u-boot, the remote core firmwares will need to be signed for HS platforms."
	@echo "Use following procedure to sign any binary"
	@echo "$(TI_SECURE_DEV_PKG)/scripts/secure-binary-image.sh <input-file-name> <output-file-name>"
	@echo "Install the signed firmware and appropriate softlinks at /lib/firmware"
	@echo "===================================================="
endif

u-boot_clean: u-boot-a72_clean u-boot-r5_clean

u-boot-a72:
	@echo ===================================
	@echo    Building U-boot for A72
	@echo ===================================
	$(MAKE) -j $(MAKE_JOBS) -C $(TI_SDK_PATH)/board-support/u-boot-* CROSS_COMPILE=$(CROSS_COMPILE) \
		 $(UBOOT_MACHINE) O=$(UBOOT_A72_BUILD_DIR)
	$(MAKE) -j $(MAKE_JOBS) -C $(TI_SDK_PATH)/board-support/u-boot-* CROSS_COMPILE=$(CROSS_COMPILE) \
		CONFIG_MKIMAGE_DTC_PATH=$(UBOOT_A72_BUILD_DIR)/scripts/dtc/dtc \
		ATF=$(UBOOT_ATF) TEE=$(UBOOT_TEE) DM=$(UBOOT_DM) \
		O=$(UBOOT_A72_BUILD_DIR)


u-boot-a72_clean:
	@echo ===================================
	@echo    Cleaning U-boot for A72
	@echo ===================================
	$(MAKE) -C $(TI_SDK_PATH)/board-support/u-boot-* CROSS_COMPILE=$(CROSS_COMPILE) \
		O=$(UBOOT_A72_BUILD_DIR) distclean
	@rm -rf $(UBOOT_A72_BUILD_DIR)

u-boot-r5:
	@echo ===================================
	@echo    Building U-boot for R5
	@echo ===================================
	$(MAKE) -j $(MAKE_JOBS) -C $(TI_SDK_PATH)/board-support/u-boot-* CROSS_COMPILE=$(CROSS_COMPILE_ARMV7) \
		 $(UBOOT_MACHINE_R5) O=$(UBOOT_R5_BUILD_DIR)
	$(MAKE) -j $(MAKE_JOBS) -C $(TI_SDK_PATH)/board-support/u-boot-* CROSS_COMPILE=$(CROSS_COMPILE_ARMV7) \
		O=$(UBOOT_R5_BUILD_DIR)
	$(MAKE) sysfw-image

u-boot-r5_clean:
	@echo ===================================
	@echo    Cleaning U-boot for R5
	@echo ===================================
	$(MAKE) -C $(TI_SDK_PATH)/board-support/u-boot-* CROSS_COMPILE=$(CROSS_COMPILE_ARMV7) \
		O=$(UBOOT_R5_BUILD_DIR) distclean
	$(MAKE) sysfw-image_clean
	@rm -rf $(UBOOT_R5_BUILD_DIR)

u-boot_stage:
	mkdir -p $(TI_SDK_PATH)/board-support/built-images
	cp $(UBOOT_A72_BUILD_DIR)/tispl.bin$(UBOOT_IMAGE_SUFFIX) $(TI_SDK_PATH)/board-support/built-images/tispl.bin
	cp $(UBOOT_A72_BUILD_DIR)/u-boot.img$(UBOOT_IMAGE_SUFFIX) $(TI_SDK_PATH)/board-support/built-images/u-boot.img
	cp $(UBOOT_R5_BUILD_DIR)/tiboot3.bin $(TI_SDK_PATH)/board-support/built-images/tiboot3.bin
	$(MAKE) sysfw-image_stage

u-boot_install: u-boot_stage
	@echo ===================================
	@echo    Installing U-boot
	@echo ===================================
	@if [ -z $(BOOTFS) ] || [ ! -d $(BOOTFS) ] ; then \
		echo "The extracted boot filesystem directory doesn't exist."; \
		echo "Please try again with BOOTFS=<boot-filesystem-dir>"; \
		exit 1; \
	fi
	cp $(TI_SDK_PATH)/board-support/built-images/tispl.bin $(BOOTFS)
	cp $(TI_SDK_PATH)/board-support/built-images/u-boot.img $(BOOTFS)
	cp $(TI_SDK_PATH)/board-support/built-images/tiboot3.bin $(BOOTFS)
	$(MAKE) sysfw-image_install 


